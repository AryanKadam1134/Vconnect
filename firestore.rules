rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read if authenticated
      allow read: if isAuthenticated();
      
      // Allow users to update their own document
      allow write, update: if isOwner(userId);
    }

    // Events collection rules
    match /events/{eventId} {
      // Anyone can read events
      allow read: if true;
      
      // Only authenticated users can create events
      allow create: if isAuthenticated();
      
      // Allow updates if user is authenticated
      allow update: if isAuthenticated() && (
        // Event creator can do anything
        resource.data.hostedBy == request.auth.uid ||
        
        // Participants can update participants array and promotions
        (
          // Only these fields can be modified
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['participants', 'promotions']) &&
          
          // New participants list must include all existing participants
          (
            !request.resource.data.diff(resource.data).affectedKeys().hasAny(['participants']) ||
            request.resource.data.participants.hasAll(resource.data.participants)
          )
        )
      );
    }

    // Chat messages collection rules
    match /events/{eventId}/messages/{messageId} {
      allow read: if isAuthenticated() && 
        exists(/databases/$(database)/documents/events/$(eventId)/participants/$(request.auth.uid));
      allow create: if isAuthenticated() && 
        exists(/databases/$(database)/documents/events/$(eventId)/participants/$(request.auth.uid));
    }
  }
} 